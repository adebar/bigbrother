<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
}

#container {
  width: 400px;
  height: 300px;
  background-color: #EEE;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
}

.line {
  fill: none;
  stroke: steelblue;
  stroke-width: 1.5px;
}

</style>
<body>
<script src="https://code.jquery.com/jquery-1.10.2.js"></script>
<script src="http://d3js.org/d3.v4.js"></script>
<body>
  <div id="container"></div>
</body>

<script>

function yahoo_direct_url(symbol, start_date, end_date, interval) {
  var url = 'https://finance-yql.media.yahoo.com/v7/finance/chart/' +
    symbol + '?' +
    'period2=' + end_date + '&' +
    'period1=' + start_date + '&' +
    'interval=' + interval + '&' +
    'indicators=quote&' +
    'includeTimestamps=true&' +
    'includePrePost=true&' +
    'events=div%7Csplit%7Cearn&' +
    'corsDomain=finance.yahoo.com'
  return url
}

function yahoo_yql_url(url) {
  var yql_url = "https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20json%20where%20url%3D'" +
    encodeURIComponent(url) + "'&format=json&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys"
  return yql_url
}

direct_url = yahoo_direct_url('GOOG', '1468450800', '1468686224', '5m')
var yql_url = yahoo_yql_url(direct_url);

$.getJSON(yql_url, function(data) {
    console.log('Requesting data from ' + yql_url);

    var values = data['query']['results']['chart']['result']['indicators']['quote']['close'];
    values = values.map(parseFloat);

    var index = data['query']['results']['chart']['result']['timestamp'];
    index = index.map(function(i) {
        return new Date(i * 1000);
    });

    parse_data(index, values);
});

// Set the dimensions of the canvas / graph
var margin = {top: 20, right: 20, bottom: 30, left: 40},
    width = 400 - margin.left - margin.right,
    height = 300 - margin.top - margin.bottom;

// Set the ranges
var x = d3.scaleTime().range([0, width]);
var y = d3.scaleLinear().range([height, 0]);

// Define the axes
var xAxis = d3.axisBottom().scale(x).ticks(5);
var yAxis = d3.axisLeft().scale(y).ticks(5);

// Define the line
var valueline = d3.line()
    .x(function(d) { return x(d.x); })
    .y(function(d) { return y(d.y); });

// Adds the svg canvas
var svg = d3.select("#container")
    .append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
    .append("g")
        .attr("transform",
              "translate(" + margin.left + "," + margin.top + ")");

function parse_data(index, values) {
    var z = d3.zip(index, values).map(function(d) {
      return {x: d[0], y: d[1] };
    });

    // Scale the range of the data
    x.domain(d3.extent(index));
    y.domain([d3.min(values), d3.max(values)]);

    // Add the valueline path.
    svg.append("path")
        .attr("class", "line")
        .attr("d", valueline(z));

    // Add the X Axis
    svg.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis);

    // Add the Y Axis
    svg.append("g")
        .attr("class", "y axis")
        .call(yAxis);

};

</script>
